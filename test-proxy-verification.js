const { HttpsProxyAgent } = require('https-proxy-agent');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–æ–∫—Å–∏ Fixie
const FIXIE_URL = process.env.FIXIE_URL || 'http://fixie:IwdUbJzKgYFgCbf@ventoux.usefixie.com:80';

async function testProxyConnection() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã –ø—Ä–æ–∫—Å–∏ Fixie...');
  console.log('–ü—Ä–æ–∫—Å–∏ URL:', FIXIE_URL);
  console.log('Node.js –≤–µ—Ä—Å–∏—è:', process.version);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
  if (process.env.FIXIE_URL) {
    console.log('‚úÖ FIXIE_URL –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è');
  } else {
    console.log('‚ö†Ô∏è FIXIE_URL –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é');
  }
  
  const agent = new HttpsProxyAgent(FIXIE_URL);
  console.log('‚úÖ HttpsProxyAgent —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ');
  
  try {
    // –¢–µ—Å—Ç 1: –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ httpbin
    console.log('\n1Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏ –∫ httpbin.org...');
    
    const response = await fetch('https://httpbin.org/ip', {
      agent,
      headers: {
        'User-Agent': 'StandUp-App-Test/1.0'
      },
      timeout: 15000
    });
    
    console.log('–°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞:', response.status, response.statusText);
    
    if (response.ok) {
      const data = await response.json();
      console.log('‚úÖ IP —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏:', data.origin);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π IP Fixie
      const fixieIPs = ['54.217.142.99', '54.195.3.54'];
      if (fixieIPs.includes(data.origin)) {
        console.log('üéâ –û—Ç–ª–∏—á–Ω–æ! –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π IP Fixie');
      } else {
        console.log('‚ö†Ô∏è IP –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∏–∑–≤–µ—Å—Ç–Ω—ã–º IP Fixie');
      }
    } else {
      console.log('‚ùå –û—à–∏–±–∫–∞ HTTP:', response.status);
    }
    
    // –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä—è–º–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
    console.log('\n2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä—è–º–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è (–±–µ–∑ –ø—Ä–æ–∫—Å–∏)...');
    
    const directResponse = await fetch('https://httpbin.org/ip', {
      headers: {
        'User-Agent': 'StandUp-App-Test/1.0'
      },
      timeout: 10000
    });
    
    if (directResponse.ok) {
      const directData = await directResponse.json();
      console.log('–ü—Ä—è–º–æ–π IP:', directData.origin);
    } else {
      console.log('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä—è–º–æ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏');
    }
    
    // –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ MAIB API
    console.log('\n3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MAIB API —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏...');
    
    const maibResponse = await fetch('https://api.maibmerchants.md/v1/generate-token', {
      method: 'POST',
      agent,
      headers: {
        'Content-Type': 'application/json',
        'User-Agent': 'StandUp-App-Test/1.0'
      },
      body: JSON.stringify({
        projectId: 'test',
        projectSecret: 'test'
      }),
      timeout: 15000
    });
    
    console.log('MAIB API —Å—Ç–∞—Ç—É—Å:', maibResponse.status, maibResponse.statusText);
    
    if (maibResponse.status === 401 || maibResponse.status === 400) {
      console.log('‚úÖ MAIB API –¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏ (–æ—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –æ–∂–∏–¥–∞–µ–º–∞)');
    } else if (maibResponse.status === 200) {
      console.log('‚úÖ MAIB API –¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏');
    } else {
      console.log('‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å –æ—Ç MAIB API:', maibResponse.status);
    }
    
    console.log('\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error.message);
    console.error('–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', error.code || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞');
    
    if (error.message.includes('ENOTFOUND')) {
      console.log('üí° –í–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ —Å DNS –∏–ª–∏ —Å–µ—Ç–µ–≤—ã–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º');
    } else if (error.message.includes('ECONNREFUSED')) {
      console.log('üí° –í–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–∫—Å–∏ —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
    } else if (error.message.includes('timeout')) {
      console.log('üí° –ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è');
    }
    
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
console.log('üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–∫—Å–∏...');
testProxyConnection();